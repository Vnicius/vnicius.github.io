{"version":3,"sources":["webpack:///./src/components/Name/index.js","webpack:///./src/components/SocialMedia/index.js","webpack:///./src/components/Project/index.js","webpack:///./src/data/index.js","webpack:///./src/components/Post/index.js","webpack:///./src/pages/index.js"],"names":["Name","color","children","className","style","SocialMedia","href","alt","image","fluid","Project","name","description","googlePlayURL","data","useStaticQuery","googleplay","childImageSharp","selfDescription","projects","post","title","url","Post","IndexPage","avatarImage","Title","contentData","twitter","linkedin","lattes","libraslens","scrapy","got","itunes","footerImage"],"mappings":"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","file":"component---src-pages-index-js-0587ab9fcd1ab55e6ac0.js","sourcesContent":["import React from \"react\"\n\nimport \"./index.css\"\n\nconst Name = ({ color = \"white\", children }) => (\n  <h2\n    className=\"name\"\n    style={{\n      color: color,\n    }}\n  >\n    {children}\n  </h2>\n)\n\nexport default Name\n","import React from \"react\"\nimport Img from \"gatsby-image\"\n\nimport \"./index.css\"\n\nconst SocialMedia = ({ href, alt = \"\", image }) => (\n  <a href={href} className=\"social-logo\" alt={alt}>\n    <Img fluid={image} />\n  </a>\n)\n\nexport default SocialMedia\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport \"./index.css\"\n\nconst Project = ({ image, name, description, googlePlayURL }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      googleplay: file(relativePath: { eq: \"google-play.png\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className=\"project-container\">\n      <Img className=\"project-image\" fluid={image} />\n      <div className=\"project-description-container\">\n        <h2\n          className=\"project-title\"\n          style={{\n            color: \"#B5CFFF\",\n          }}\n        >\n          {name}\n        </h2>\n        <p className=\"project-description\">{description}</p>\n        <a href={googlePlayURL} alt=\"Google Play\">\n          <Img\n            className=\"project-source-logo\"\n            fluid={data.googleplay.childImageSharp.fluid}\n          />\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default Project\n","const data = {\n  selfDescription: `Sou um desenvolvedor Android, atualmente trabalho na Fuze.cc. Sou\n  Bacharel em Ciência da Computação pela UFPB e estudante de mestrado em Ciência da Computação pela UFPB. Durante meu bacharelado\n  Trabalhei no Lavid, um laboratório de pesquisas da UFPB, onde desenvolvi\n  aplicações de tradução automática para línguas de sinais. Também tenho\n  conhecimento e experiência em outras tecnologias e linguagens como\n  Python, React, React Native, Node e Machine Learning.`,\n  projects: [\n    {\n      name: \"libras lens\",\n      description:\n        \"Um app que possibilita que o usuário utilize a câmera do seu dispositivo para identificar os textos no mundo real e traduzi-los para Libras (Língua Brasileira de Sinais).\",\n      googlePlayURL:\n        \"https://play.google.com/store/apps/details?id=com.libraslens\",\n    },\n  ],\n  post: [\n    {\n      title: \"Scrap fácil com o Scrapy\",\n      url:\n        \"https://medium.com/@vnicius/scrap-f%C3%A1cil-com-o-scrapy-7ae8e48a6e34\",\n    },\n    {\n      title:\n        \"Usando Machine Learning para descobrir até quando você viveria em GoT\",\n      url:\n        \"https://medium.com/@vnicius/usando-machine-learning-para-descobrir-at%C3%A9-quando-voc%C3%AA-viveria-em-got-9c31df8bf8d3\",\n    },\n    {\n      title:\n        \"Dicas de como utilizar a API do iTunes para construir um agregador de podcasts\",\n      url:\n        \"https://medium.com/@vnicius/dicas-de-como-utilizar-a-api-do-itunes-para-construir-um-agregador-de-podcasts-e0cf55b35cf7\",\n    },\n  ],\n}\n\nexport default data\n","import React from \"react\"\nimport Img from \"gatsby-image\"\n\nimport \"./index.css\"\n\nconst Post = ({ image, title, url }) => (\n  <a className=\"post-container\" href={url}>\n    <div className=\"post-cover\">\n      <Img fluid={image} />\n    </div>\n    <h3 className=\"post-title\">{title}</h3>\n  </a>\n)\n\nexport default Post\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport \"./fonts.css\"\nimport \"./index.css\"\nimport Title from \"../components/Title\"\nimport Name from \"../components/Name\"\nimport SocialMedia from \"../components/SocialMedia\"\nimport Project from \"../components/Project\"\nimport contentData from \"../data\"\nimport Post from \"../components/Post\"\n\nconst IndexPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      avatarImage: file(relativePath: { eq: \"photo.jpg\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      twitter: file(relativePath: { eq: \"twitter.png\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      linkedin: file(relativePath: { eq: \"linkedin.png\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      lattes: file(relativePath: { eq: \"lattes.png\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      googleplay: file(relativePath: { eq: \"google-play.png\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      libraslens: file(relativePath: { eq: \"libraslens.png\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      footerImage: file(relativePath: { eq: \"footer.jpg\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      scrapy: file(relativePath: { eq: \"scrapy.png\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      got: file(relativePath: { eq: \"got.png\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      itunes: file(relativePath: { eq: \"itunes.png\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Layout>\n      <SEO title=\"Portfolio\" />\n\n      <div className=\"header-container\">\n        <Img className=\"photo\" fluid={data.avatarImage.childImageSharp.fluid} />\n        <div className=\"content-container\">\n          <Title color=\"#fff975\">it’s</Title>\n          <Name color=\"#67b6ff\" className=\"name\">\n            vinícius\n          </Name>\n          <Name color=\"#67b6ff\">veríssimo</Name>\n          <p className=\"description\">{contentData.selfDescription}</p>\n          <div className=\"social-logo-container\">\n            <SocialMedia\n              href=\"https://twitter.com/devnicius\"\n              alt=\"twitter\"\n              image={data.twitter.childImageSharp.fluid}\n            />\n            <SocialMedia\n              href=\"https://www.linkedin.com/in/vinicius-matheus/\"\n              alt=\"LinkedIn\"\n              image={data.linkedin.childImageSharp.fluid}\n            />\n            <SocialMedia\n              href=\"http://lattes.cnpq.br/9948718867356003\"\n              alt=\"Lattes\"\n              image={data.lattes.childImageSharp.fluid}\n            />\n            <SocialMedia\n              href=\"https://play.google.com/store/apps/dev?id=8650227152591752627\"\n              alt=\"Google Play\"\n              image={data.googleplay.childImageSharp.fluid}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"content-section\">\n        <Title color=\"#FF7676\">projetos</Title>\n        <div className=\"projects-container\">\n          <Project\n            image={data.libraslens.childImageSharp.fluid}\n            name={contentData.projects[0].name}\n            googlePlayURL={contentData.projects[0].googlePlayURL}\n            description={contentData.projects[0].description}\n          />\n        </div>\n      </div>\n      <div className=\"content-section\">\n        <Title color=\"#9AFF76\">posts</Title>\n        <div className=\"posts-layout\">\n          <div className=\"posts-background\" />\n          <div className=\"posts-container\">\n            <Post\n              title={contentData.post[0].title}\n              url={contentData.post[0].url}\n              image={data.scrapy.childImageSharp.fluid}\n            />\n            <Post\n              title={contentData.post[1].title}\n              url={contentData.post[1].url}\n              image={data.got.childImageSharp.fluid}\n            />\n            <Post\n              title={contentData.post[2].title}\n              url={contentData.post[2].url}\n              image={data.itunes.childImageSharp.fluid}\n            />\n          </div>\n        </div>\n      </div>\n      <footer className=\"content-section\">\n        <Img\n          className=\"footer-image\"\n          fluid={data.footerImage.childImageSharp.fluid}\n        />\n      </footer>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}